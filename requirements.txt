# Core dependencies - using compatible version ranges for stability and flexibility
# Format: package>=min,<next_breaking_major
#
# Version strategy:
# - Allow MINOR and PATCH updates (bug fixes, features)
# - Block MAJOR updates (breaking changes)
# - Update this file quarterly or when issues arise

# Security scanners
semgrep>=1.127.0,<2.0.0  # SAST scanner - allow 1.x updates, block 2.x

# AI providers (primary: AWS Bedrock)
boto3>=1.35.0,<2.0.0  # AWS SDK for Bedrock - allow 1.x updates
openai>=1.0.0,<2.0.0  # OpenAI API (legacy) - v2+ may have breaking changes
anthropic>=0.40.0,<1.0.0  # Anthropic Claude API (legacy) - block 1.0 changes

# Core utilities
python-dotenv>=1.0.0,<2.0.0  # Environment configuration
requests>=2.32.0,<3.0.0  # HTTP client - v3 may have breaking changes
gitpython>=3.1.40,<4.0.0  # Git operations
rich>=13.0.0,<14.0.0  # Terminal UI
jinja2>=3.1.0,<4.0.0  # Template engine

# Type support
typing-extensions>=4.10.0  # No upper bound - stdlib compatibility layer

# Testing (optional)
pytest>=8.0.0,<9.0.0  # Unit testing
pytest-asyncio>=0.23.0,<1.0.0  # Async test support

# External tools (installed separately, not via pip):
# - Semgrep CLI: https://semgrep.dev/docs/getting-started
# - Gitleaks: https://github.com/gitleaks/gitleaks
# - Trivy: https://github.com/aquasecurity/trivy
# - Syft: https://github.com/anchore/syft

# Maintenance schedule:
# - Review quarterly for security updates
# - Test with: ./test_all_modes.sh
# - Update minimums when features require newer versions
# - Update maximums when testing confirms compatibility
